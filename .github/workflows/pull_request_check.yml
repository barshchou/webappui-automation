name: Run smoke tests and tests, included in PR

on:
  pull_request:
    types: [opened, labeled, ready_for_review]

jobs:
  Run-tsc-check:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'ready_for_review'
    container: cypress/browsers:node16.13.2-chrome100-ff98
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1.8.21

      - name: Run tsc:check
        run: npm run tsc:check

  Run-smoke-tests:
    needs: Run-tsc-check
    timeout-minutes: 20
    runs-on: ubuntu-latest
    container: cypress/browsers:node16.13.2-chrome100-ff98
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
    outputs:
      URL: ${{ steps.define_pull_request_data.outputs.URL }}
      CUSTOM_URL: ${{ steps.define_pull_request_data.outputs.CUSTOM_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1.8.21

      - name: Define env and url variables
        id: define_pull_request_data
        run: |
          URL=$(node scripts/pull_request_data/index.js --token ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }} --pr ${{ github.event.number }} --data url)
          CUSTOM_URL=$(node scripts/pull_request_data/index.js --token ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }} --pr ${{ github.event.number }} --data customUrl)
          echo ::set-output name=URL::$URL
          echo ::set-output name=CUSTOM_URL::$CUSTOM_URL

      - name: Run smoke end-to-end tests with Currents dev
        uses: Bowery-RES/action-run-e2e-tests@latest
        with:
          github_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          url: ${{ steps.define_pull_request_data.outputs.URL }}
          customUrl: ${{ steps.define_pull_request_data.outputs.CUSTOM_URL }}
          tags: grep=,grepTags=@smoke,burn=
          record_key: ${{ secrets.CURRENTS_RECORD_KEY }}
          ref: ${{ github.sha }}
        env:
          DD_CIVISIBILITY_AGENTLESS_ENABLED: true
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_ENV: ${{ github.event.inputs.url }}
          DD_SERVICE: 'webapp'

  Run-included-tests:
    needs: [Run-tsc-check, Run-smoke-tests]
    timeout-minutes: 90
    runs-on: ubuntu-latest
    container: cypress/browsers:node16.13.2-chrome100-ff98
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      
      - name: Installing modules
        uses: bahmutov/npm-install@v1.8.21

      - name: Install find specs module
        run: npm install -g find-cypress-specs@latest

      - name: Define included specs
        id: define_specs
        run: |
          git fetch --no-tags --depth=1 origin ${{ github.base_ref }}
          git fetch --no-tags --depth=1 origin ${{ github.head_ref }}
          git checkout origin/${{ github.base_ref }}
          git checkout origin/${{ github.head_ref }}
          git checkout ${{ github.sha }}
          CHANGED_SPECS=$(npx find-cypress-specs --branch master)
          echo ::set-output name=CHANGED_SPECS::$CHANGED_SPECS

      - name: Run included specs
        if: steps.define_specs.outputs.CHANGED_SPECS != null
        uses: Bowery-RES/action-run-e2e-tests@latest
        with:
          github_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          url: ${{ needs.Run-smoke-tests.outputs.URL }}
          customUrl: ${{ needs.Run-smoke-tests.outputs.CUSTOM_URL }}
          spec_file: ${{ steps.define_specs.outputs.CHANGED_SPECS }}
          record_key: ${{ secrets.CURRENTS_RECORD_KEY }}
          tags: grep=,grepTags=,burn=
          ref: ${{ github.sha }}
        env:
          DD_CIVISIBILITY_AGENTLESS_ENABLED: true
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_ENV: ${{ github.event.inputs.url }}
          DD_SERVICE: 'webapp'
